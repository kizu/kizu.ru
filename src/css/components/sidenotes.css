/* ================================= *\
   Sidenotes, sidelinks & highlights
\* ================================= */

/*
  Provides an API consisting of:

  1. `--sidenote-counters` to use at the `counters` prop on the top level.
  2. Components `Sidenote`, `Sidelink` & `Highlight`.

  TODO: describe the HTML structure for components and their individual API.
*/
:root {
  --sidenote-counters: sidenote sidenote-link;
}

/* Sidenotes stuff */
.Sidenote,
.Sidelink {
  position: relative;
  z-index: 0;

  display: inline-block;
  text-indent: 0;
}

.Sidenote::after,
.Sidelink::after {
  content: "";
  position: absolute;
  inset: 0;
  z-index: -1;
  pointer-events: none;

  transition: background-color 0.2s 0.2s linear;
  background:
    var(--state, rgba(255, 255, 0, 0.3))
    var(--not-state, transparent);
}

.Sidelink::after {
  left: -0.16rem;
}

.Sidenote::after {
  left: -2rem;
}

.Sidelink {
  --counter: sidenote-link;
  --link-underline-color: transparent;
  --link-underline-color--hover: transparent;
}

.Sidenote {
  --counter: sidenote;
}

p[role=note] {
  --asides-padding-top: 0;
  --p-p-margin-top: calc(var(--at-large) * -0.75rem + var(--THEME_LINE_HEIGHT) * (var(--at-large) * var(--offset, 0) + var(--at-small) * 0.5));
}

.Sidenote::before {
  content: counter(var(--counter)) ". ";

  position: absolute;
  top: calc(var(--at-large) * var(--asides-padding-top));
  left: -2.25rem;

  width: 2rem;

  text-align: right;
  color: rgba(0,0,0, 0.6);
  transition: opacity 0.2s 0.2s linear;
  white-space: nowrap;

  opacity:
    var(--state, 1)
    var(--not-state, 0);
}

.Sidenote {
  box-sizing: border-box;
  padding-right: var(--h-gap);
}

.Sidelink,
.Sidenote {
  counter-increment: var(--counter);
}

/* TODO: Firefox behaves weirdly here without this. Need to investigate */
.Sidelink-Link {
  display: inline-block;
}

.Sidelink-Link::after {
  content: counter(var(--counter));

  cursor: pointer;

  padding: 0.32rem 0.48rem;
  margin: 0 -0.48rem 0 -0.40rem;

  font-size: 1rem;
  line-height: 1;
  white-space: nowrap;

  color: rgba(0,0,0, 0.6);

  font-feature-settings: "smcp";
}

/* Cross-highlighting! */
article[style*='--scopes:'] {
  timeline-scope: var(--scopes);
}

@keyframes --state {
  to {
    --state: initial;
    --not-state: ;
  }
}

@supports (animation-timeline: --foo) {
  [style*='--sidenote:']:not(:hover, :focus-within) {
    --state: ;
    --not-state: initial;
    animation: --state both;
    animation-timeline: var(--sidenote);
    animation-range: 0 0;
  }

  [style*='--sidenote:']:is(:hover, :focus-within) {
    view-timeline: var(--sidenote);
  }
}
